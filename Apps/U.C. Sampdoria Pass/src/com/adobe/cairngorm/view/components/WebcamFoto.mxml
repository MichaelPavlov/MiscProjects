<?xml version="1.0" encoding="utf-8"?>
<s:Border xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" 
		 width="493" height="303"
		 cornerRadius="8" backgroundColor="#333333"
		 creationComplete="detectCamera()">
	<s:states>
		<s:State name="WebcamState"/>
		<s:State name="SnapshotState"/>
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="snapshotTaken", type="flash.events.Event")]		
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.model.ApplicationModelLocator;
			
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.media.Camera;
			import flash.media.Video;
			
			import mx.controls.Alert;
			
			private var WIDTH:int = 1280;
			private var HEIGHT:int = 1024;
			
			[Bindable]
			private var model:ApplicationModelLocator = ApplicationModelLocator.getInstance();
			
			private var camera:Camera;
			private var video:Video = new Video();
			private var container:Sprite = new Sprite();
			
			public function detectCamera():void {
				camera = Camera.getCamera();
				if (camera) {			
					while (videoDisplay.numChildren) {
						videoDisplay.removeChildAt(0)
					}
					
					camera.setMode(WIDTH,HEIGHT, 10);
					camera.setQuality(262144, 100);
					
					WIDTH = camera.width;
					HEIGHT = camera.height;
					
					video = null;
					video = new Video();
					video = new Video(camera.width, camera.height);
					video.attachCamera(camera);
					video.smoothing = true;
					
					container = new Sprite()
					container.addChild(video);					
					container.width = 372; 
					container.height = 279;
					
					videoDisplay.addChild(container);
					 
					//camera.
					trace (this.width+' '+this.height); 
				} else {
					Alert.show("Non sono state rilevate webcam.");
				}
			}
			

			protected function btnTakePicture_clickHandler(event:MouseEvent):void {
				//photo.source = null;
				//photo.source = videoDisplay;
				
				model.currentUserPhoto = new BitmapData(WIDTH, HEIGHT, true, 0);
				model.currentUserPhoto.draw(video, new Matrix()); 
				
				//model.currentUserPhoto = Bitmap(photo.source.content).bitmapData;
				
				//currentState='SnapshotState';
				this.dispatchEvent(new Event('snapshotTaken'));
			}
			
			private function onResize():void {
				var cW:Number;
				var cH:Number;
				var coef:Number =  160 / 120;
				cW = videoSpace.width;
				cH = videoSpace.width / coef;
				
				if (cH > videoSpace.height) {
					cH = videoSpace.height;
					cW = videoSpace.height * coef;
				}

				container.width = cW;
				container.height = cH;
				trace (videoDisplay.width+' '+videoDisplay.height+' '+container.width+' '+container.height);
				//container.y = (videoDisplay.height - container.height) / 2;
				//container.x = (dataHolder.nMaxVideoWidth - container.width) / 2;	
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup top="10" bottom="10" left="10" right="10"
			  width="100%" height="100%"
			  gap="10">
		<s:VGroup>
			<s:Button id="btnTakePicture" width="100%" 
					  label="Scatta" fontSize="11" click="btnTakePicture_clickHandler(event)"/>
			<!--<s:Button id="btnReset" label="Elimina" fontSize="11" click="currentState='WebcamState'"/>-->
			<s:Button id="btnDetect" width="100%" 
					  label="Trova Webcam" click="{this.detectCamera()}"/>
		</s:VGroup>
		
		<s:Border id="videoSpace" width="100%" height="100%">
			
					<!--<mx:Image id="photo" smoothBitmapContent="true" 
					  width="160" height="120"
					  visible.SnapshotState="true" visible.WebcamState="false"/>-->
			
			<s:BitmapImage id="photo" smooth="true" 
						   width="160" height="120"
						   visible.SnapshotState="true" visible.WebcamState="false"/>
			
			<s:SpriteVisualElement id="videoDisplay"
								   width="100%" height="100%"
								   visible.SnapshotState="false" visible.WebcamState="true"/>
		</s:Border>
		
		
	</s:HGroup>
		
</s:Border>
